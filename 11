var APPL_ID = DV.getFieldValue("C_MAIN_REF");
		DV.writeLog("C_MAIN_REF: " + APPL_ID); 
		 var catagory1; 
		 catagory1= DV.addFieldList(null, "OPERA_ACC_NO");
		 var catagoryresultsql_cond = DV.addSQLCondition(null, "C_MAIN_REF", APPL_ID);
		 var catagoryresult = DV.executeQuery("EXIMTRX.FWCO_MASTER", catagory1, catagoryresultsql_cond);
		 catagory1= DV.getDBFieldValue(catagoryresult, "OPERA_ACC_NO");

       	 DV.writeLog("OPERA_ACC_NO_GET_TABLE_VALUE: " + catagory1); 

		 var CHG_FLD_LOCAL_CUST_AC_NO1 = DV.updateField("CHG_FLD_LOCAL_CUST_AC_NO", catagory1);

		DV.writeLog("CHG_FLD_LOCAL_CUST_AC_NO1: " + CHG_FLD_LOCAL_CUST_AC_NO1);



// 1️⃣ Get the Application ID
var APPL_ID = DV.getFieldValue("C_MAIN_REF");
DV.writeLog("C_MAIN_REF: " + APPL_ID);

// 2️⃣ Prepare field list and SQL condition
var fieldList = DV.addFieldList(null, "OPERA_ACC_NO");
var sqlCond = DV.addSQLCondition(null, "C_MAIN_REF", APPL_ID);

// 3️⃣ Execute query on FWCO_MASTER table
var result = DV.executeQuery("EXIMTRX.FWCO_MASTER", fieldList, sqlCond);

// 4️⃣ Get the OPERA_ACC_NO value from the result
var operaAccNo = DV.getDBFieldValue(result, "OPERA_ACC_NO");
DV.writeLog("OPERA_ACC_NO_GET_TABLE_VALUE: " + operaAccNo);

// 5️⃣ Update field only if value exists
if (operaAccNo != null && operaAccNo !== "") {
    var updateResult = DV.updateField("CHG_FLD_LOCAL_CUST_AC_NO", operaAccNo);
    DV.writeLog("CHG_FLD_LOCAL_CUST_AC_NO (after update): " + updateResult);
} else {
    DV.writeLog("OPERA_ACC_NO is NULL or empty — skipping update.");




// Get value
var rs = DV.executeQuery("EXIMTRX.FWCO_MASTER", DV.addFieldList(null, "OPERA_ACC_NO"),
                         DV.addSQLCondition(null, "C_MAIN_REF", DV.getFieldValue("C_MAIN_REF")));
var raw = DV.getDBFieldValue(rs, "OPERA_ACC_NO");

// Normalize anything -> clean string (handles array, object/node, XML, CDATA)
function asText(v) {
  if (v == null) return "";
  // If array, take first
  if (Array.isArray(v)) v = v[0];

  // If object (DOM node / custom), try common text holders
  if (typeof v === "object") {
    if ("text" in v) v = v.text;
    else if ("value" in v) v = v.value;
    else if ("textContent" in v) v = v.textContent;
    else v = String(v);
  }

  v = String(v);

  // If wrapped in CDATA: <![CDATA[ ... ]]>
  v = v.replace(/^<!\[CDATA\[(.*)\]\]>$/s, "$1");

  // If still has XML tags, strip them
  v = v.replace(/<[^>]+>/g, "");

  return v.trim();
}

var operaAccNo = asText(raw);

// If it must be digits only (common for account nos)
var operaAccNoDigits = operaAccNo.replace(/\D/g, "");

DV.writeLog("RAW_OPERA_ACC_NO: " + raw);
DV.writeLog("NORMALIZED_OPERA_ACC_NO: " + operaAccNo);
DV.writeLog("DIGITS_ONLY_OPERA_ACC_NO: " + operaAccNoDigits);

// Update UI (try both setters; some screens prefer one)
var TARGET = "CHG_FLD_LOCAL_CUST_AC_NO";
var r1 = DV.updateField(TARGET, operaAccNoDigits);
DV.writeLog("updateField -> " + r1 + " | readback: " + DV.getFieldValue(TARGET));

if (!DV.getFieldValue(TARGET)) {
  if (DV.setFieldValue) {
    var r2 = DV.setFieldValue(TARGET, operaAccNoDigits);
    DV.writeLog("setFieldValue -> " + r2 + " | readback: " + DV.getFieldValue(TARGET));
  }
}



// 1) Get key + query
var APPL_ID = DV.getFieldValue("C_MAIN_REF");
var rs = DV.executeQuery(
  "EXIMTRX.FWCO_MASTER",
  DV.addFieldList(null, "OPERA_ACC_NO"),
  DV.addSQLCondition(null, "C_MAIN_REF", APPL_ID)
);

// 2) Grab raw value (handle array/object/XML/CDATA) without functions
var raw = DV.getDBFieldValue(rs, "OPERA_ACC_NO");
var val = raw;

// if it's an array, take first
if (Array.isArray(val)) val = val[0];

// try common object props if it's an object node
if (val && typeof val === "object") {
  if ("text" in val) val = val.text;
  else if ("value" in val) val = val.value;
  else if ("textContent" in val) val = val.textContent;
}

// force string, strip CDATA + tags, trim, keep digits only
val = String(val)
  .replace(/<!\[CDATA\[(.*?)\]\]>/, "$1")
  .replace(/<[^>]+>/g, "")
  .trim()
  .replace(/\D/g, "");

DV.writeLog("OPERA_ACC_NO_CLEAN: " + val);

// 3) Try to set the field (header field)
var TARGET = "CHG_FLD_LOCAL_CUST_AC_NO";
var r1 = DV.updateField(TARGET, val);
DV.writeLog("updateField -> " + r1 + " | readback: " + DV.getFieldValue(TARGET));

// 4) Fallback setter if readback is still empty
var rb = DV.getFieldValue(TARGET);
if (rb == null || String(rb).trim() === "") {
  if (DV.setFieldValue) {
    var r2 = DV.setFieldValue(TARGET, val);
    DV.writeLog("setFieldValue -> " + r2 + " | readback: " + DV.getFieldValue(TARGET));
  }
}

